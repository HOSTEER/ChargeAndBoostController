../Prod/usb-pd/lib/Logic/policy_engine_states.cpp:26:35:PolicyEngine::policy_engine_state PolicyEngine::pe_sink_startup()	1
../Prod/usb-pd/lib/Logic/policy_engine_states.cpp:42:35:PolicyEngine::policy_engine_state PolicyEngine::pe_sink_discovery()	1
../Prod/usb-pd/lib/Logic/policy_engine_states.cpp:53:35:PolicyEngine::policy_engine_state PolicyEngine::pe_sink_setup_wait_cap()	1
../Prod/usb-pd/lib/Logic/policy_engine_states.cpp:62:35:PolicyEngine::policy_engine_state PolicyEngine::pe_sink_wait_cap()	8
../Prod/usb-pd/lib/Logic/policy_engine_states.cpp:108:35:PolicyEngine::policy_engine_state PolicyEngine::pe_sink_eval_cap()	7
../Prod/usb-pd/lib/Logic/policy_engine_states.cpp:145:35:PolicyEngine::policy_engine_state PolicyEngine::pe_sink_select_cap_tx()	1
../Prod/usb-pd/lib/Logic/policy_engine_states.cpp:156:35:PolicyEngine::policy_engine_state PolicyEngine::pe_sink_select_cap()	1
../Prod/usb-pd/lib/Logic/policy_engine_states.cpp:165:35:PolicyEngine::policy_engine_state PolicyEngine::pe_sink_wait_cap_resp()	10
../Prod/usb-pd/lib/Logic/policy_engine_states.cpp:205:35:PolicyEngine::policy_engine_state PolicyEngine::pe_sink_transition_sink()	4
../Prod/usb-pd/lib/Logic/policy_engine_states.cpp:228:35:PolicyEngine::policy_engine_state PolicyEngine::pe_sink_ready()	36
../Prod/usb-pd/lib/Logic/policy_engine_states.cpp:337:35:PolicyEngine::policy_engine_state PolicyEngine::pe_sink_get_source_cap()	1
../Prod/usb-pd/lib/Logic/policy_engine_states.cpp:348:35:PolicyEngine::policy_engine_state PolicyEngine::pe_sink_give_sink_cap()	1
../Prod/usb-pd/lib/Logic/policy_engine_states.cpp:358:35:PolicyEngine::policy_engine_state PolicyEngine::pe_sink_hard_reset()	2
../Prod/usb-pd/lib/Logic/policy_engine_states.cpp:377:35:PolicyEngine::policy_engine_state PolicyEngine::pe_sink_transition_default()	1
../Prod/usb-pd/lib/Logic/policy_engine_states.cpp:387:35:PolicyEngine::policy_engine_state PolicyEngine::pe_sink_soft_reset()	1
../Prod/usb-pd/lib/Logic/policy_engine_states.cpp:399:35:PolicyEngine::policy_engine_state PolicyEngine::pe_sink_send_soft_reset()	1
../Prod/usb-pd/lib/Logic/policy_engine_states.cpp:414:35:PolicyEngine::policy_engine_state PolicyEngine::pe_sink_send_soft_reset_tx_ok()	1
../Prod/usb-pd/lib/Logic/policy_engine_states.cpp:420:35:PolicyEngine::policy_engine_state PolicyEngine::pe_sink_send_soft_reset_resp()	6
../Prod/usb-pd/lib/Logic/policy_engine_states.cpp:447:35:PolicyEngine::policy_engine_state PolicyEngine::pe_sink_send_not_supported()	3
../Prod/usb-pd/lib/Logic/policy_engine_states.cpp:466:35:PolicyEngine::policy_engine_state PolicyEngine::pe_sink_chunk_received()	1
../Prod/usb-pd/lib/Logic/policy_engine_states.cpp:474:35:PolicyEngine::policy_engine_state PolicyEngine::pe_sink_not_supported_received()	1
../Prod/usb-pd/lib/Logic/policy_engine_states.cpp:481:35:PolicyEngine::policy_engine_state PolicyEngine::pe_sink_source_unresponsive()	1
../Prod/usb-pd/lib/Logic/policy_engine_states.cpp:488:35:PolicyEngine::policy_engine_state PolicyEngine::pe_sink_wait_event()	7
../Prod/usb-pd/lib/Logic/policy_engine_states.cpp:511:35:PolicyEngine::policy_engine_state PolicyEngine::pe_sink_wait_good_crc()	5
../Prod/usb-pd/lib/Logic/policy_engine_states.cpp:537:35:PolicyEngine::policy_engine_state PolicyEngine::pe_sink_wait_send_done()	5
C:/Users/louis/Desktop/ChargeAndBoostController/Prod/usb-pd/lib/Inc/ringbuffer.h:39:10:size_t ringbuffer<T, size>::getOccupied() const [with T = pd_msg; unsigned int size = 4]	4
C:/Users/louis/Desktop/ChargeAndBoostController/Prod/usb-pd/lib/Inc/ringbuffer.h:25:8:void ringbuffer<T, size>::pop(T*) [with T = pd_msg; unsigned int size = 4]	5
